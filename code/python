import discord
from discord.ext import commands

TOKEN = 'YOUR_BOT_TOKEN'
intents = discord.Intents.default()
intents.guilds = True
intents.voice_states = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

VC_HUB_ID = 123456789012345678  # Hub VC ID
CATEGORY_ID = 987654321098765432  # Category for created VCs

# Store temporary VC info if needed
user_vcs = {}

@bot.event
async def on_voice_state_update(member, before, after):
    guild = member.guild
    category = guild.get_channel(CATEGORY_ID)

    # User joins the hub VC
    if after.channel and after.channel.id == VC_HUB_ID:
        # Ask user for VC name
        await member.send("Please type the name you want for your VC:")
        def check(m):
            return m.author == member and isinstance(m.channel, discord.DMChannel)

        try:
            msg = await bot.wait_for('message', check=check, timeout=30)
            vc_name = msg.content
        except:
            vc_name = f"{member.name}'s VC"  # Default if no reply

        # Ask for user limit
        await member.send("Enter the user limit for your VC (or type 0 for unlimited):")
        try:
            msg = await bot.wait_for('message', check=check, timeout=30)
            user_limit = int(msg.content)
            if user_limit <= 0:
                user_limit = None
        except:
            user_limit = None

        # Create VC
        new_vc = await guild.create_voice_channel(
            name=vc_name,
            category=category,
            user_limit=user_limit
        )
        user_vcs[member.id] = new_vc.id
        await member.move_to(new_vc)
        await member.send(f"âœ… Your VC `{vc_name}` has been created!")

    # Delete VC when empty
    if before.channel:
        if before.channel.id in user_vcs.values() and len(before.channel.members) == 0:
            try:
                await before.channel.delete()
            except:
                pass



