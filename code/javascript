const { Client, GatewayIntentBits, ChannelType } = require('discord.js');
const client = new Client({ intents: [
    GatewayIntentBits.Guilds, 
    GatewayIntentBits.GuildVoiceStates,
    GatewayIntentBits.DirectMessages,
    GatewayIntentBits.MessageContent
] });

const TOKEN = 'YOUR_BOT_TOKEN';
const VC_HUB_ID = '123456789012345678'; // Hub VC ID
const CATEGORY_ID = '987654321098765432'; // Category ID

const userVCs = new Map();

client.on('voiceStateUpdate', async (oldState, newState) => {
    const guild = newState.guild;
    const category = guild.channels.cache.get(CATEGORY_ID);

    // User joins hub VC
    if (newState.channelId === VC_HUB_ID) {
        const member = newState.member;

        try {
            // Ask for VC name
            const dm = await member.send("Please type the name you want for your VC:");
            const nameMsg = await dm.channel.awaitMessages({
                filter: m => m.author.id === member.id,
                max: 1,
                time: 30000,
                errors: ['time']
            });
            const vcName = nameMsg.first().content || `${member.user.username}'s VC`;

            // Ask for user limit
            const dm2 = await member.send("Enter the user limit for your VC (0 for unlimited):");
            const limitMsg = await dm2.channel.awaitMessages({
                filter: m => m.author.id === member.id,
                max: 1,
                time: 30000,
                errors: ['time']
            });
            let userLimit = parseInt(limitMsg.first().content);
            if (isNaN(userLimit) || userLimit <= 0) userLimit = null;

            // Create VC
            const newVC = await guild.channels.create({
                name: vcName,
                type: ChannelType.GuildVoice,
                parent: category,
                userLimit: userLimit
            });

            userVCs.set(member.id, newVC.id);
            await newState.setChannel(newVC);
            await member.send(`✅ Your VC "${vcName}" has been created!`);

        } catch (err) {
            console.log(err);
            await member.send("❌ VC creation timed out. Using default name and unlimited slots.");
            const defaultVC = await guild.channels.create({
                name: `${member.user.username}'s VC`,
                type: ChannelType.GuildVoice,
                parent: category
            });
            userVCs.set(member.id, defaultVC.id);
            await newState.setChannel(defaultVC);
        }
    }

    // Delete VC when empty
    if (oldState.channelId && oldState.channelId !== VC_HUB_ID) {
        const oldVC = oldState.channel;
        if (userVCs.has(oldState.id) && oldVC.members.size === 0) {
            try {
                await oldVC.delete();
                userVCs.delete(oldState.id);
            } catch (err) {
                console.error(err);
            }
        }
    }
});

client.login(TOKEN);



